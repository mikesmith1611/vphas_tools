#!/bin/sh -f
#PBS -N sed_mcmc                                                           
#PBS -l nodes=100:ppn=1
#PBS -k oe                                                          
#PBS -q main
#PBS -l pmem=1gb,walltime=2:00:00
#PBS -m bea
NP=`cat ${PBS_NODEFILE} | wc -l`

echo $1
echo ------------------------------------------------------
echo -n 'Job is running on node '; cat $PBS_NODEFILE
echo ------------------------------------------------------
echo Number of processes: $NP
echo PBS: qsub is running on $PBS_O_HOST
echo PBS: originating queue is $PBS_O_QUEUE
echo PBS: executing queue is $PBS_QUEUE
echo PBS: working directory is $PBS_O_WORKDIR
echo PBS: execution mode is $PBS_ENVIRONMENT
echo PBS: job identifier is $PBS_JOBID
echo PBS: job name is $PBS_JOBNAME
echo PBS: node file is $PBS_NODEFILE
echo PBS: array ID is $PBS_ARRAYID
echo PBS: current home directory is $PBS_O_HOME
echo PBS: PATH = $PBS_O_PATH
echo ------------------------------------------------------

#export PYTHONPATH=/home/msmith/bin/anaconda/lib/python2.7/site-packages/:$PYTHONPATH

#export PATH=/soft/mpich2/bin:/home/msmith/bin/anaconda/bin
#export PYTHONPATH=/home/msmith/pythonscripts:/home/msmith/bin/anaconda/lib/python2.7/site-packages:/home/msmith/mcmc

echo $PYTHONPATH
echo $PATH

echo "Starting cluster"
# This will block

ipcluster start --n=$NP --engines=MPI --profile=mpi --cluster-id=sedmcmc --debug &

while [ ! -s ~/.ipython/profile_mpi/security/ipcontroller-sedmcmc-client.json ]
  do
  printf "%10s \r" Waiting...
done

sleep 10

#echo "Starting mcmc script"
python /car-data/msmith/carina/sed_run.py

sleep 10

P="`echo $PBS_JOBID | cut -d'.' -f1`"


if [ "`grep Finished ~/sedmcmc.o$P`" == "Finished" ]; then

    echo "Stopping cluster"
    ipcluster stop --profile=mpi --cluster-id=sedmcmc &

    sleep 10

    echo ------------------------------------------------------
    echo Job ends

else

    qdel $P

fi